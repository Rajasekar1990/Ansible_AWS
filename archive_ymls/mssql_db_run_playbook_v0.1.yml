---
- hosts: all
  # connection: remote
  become_method: runas
  gather_facts: no
  vars_files:
  - variables.txt
  - mssql_query.txt
  tasks:
  # - name: 'connect to mssql db using win_shell module'
  #   win_shell:
  #     "invoke-sqlcmd -username \"{{ mssql_login_user }}\" -password \"{{ mssql_login_password }}\" -Query \"{{ select_query1 }}\" | Select-Object * -ExcludeProperty ItemArray, Table, RowError, RowState, HasErrors | ConvertTo-Json"
  #   register: output
  # - set_fact:
  #     ids: "{{ output.rc|from_json }}"
  # - debug: var=ids

  # - name: 'Create a new database with name {{ mssql_db }}'
  #   community.general.mssql_db:
  #     login_host: '{{ mssql_login_host }}'
  #     login_user: '{{ mssql_login_user }}'
  #     login_password: '{{ mssql_login_password }}'
  #     login_port: '{{ mssql_port }}'
  #     name: '{{ mssql_db }}'
  #     state: present
  #   when: inventory_hostname in groups['localhosts']

  # - name: Check DB connection
  #   community.general.mssql_script:
  #     login_user: "{{ mssql_login_user }}"
  #     login_password: "{{ mssql_login_password }}"
  #     login_host: "{{ mssql_login_host }}"
  #     login_port: "{{ mssql_port }}"
  #     db: master  
  #     script: "SELECT 1"
  #   when: inventory_hostname in groups['localhosts']
  #   tags: connect

  - name: 'connect to mssql db using mssql_script module'
    community.general.mssql_script:
      login_host: '{{ mssql_login_host }}'
      login_user: '{{ mssql_login_user }}'
      login_password: '{{ mssql_login_password }}'
      login_port: "{{ mssql_port }}"
      db: "{{ mssql_db }}"
      script: '{{ select_query1 }}'
    register: result_params
    # ignore_errors: yes
    # run_once: true
    when: inventory_hostname in groups['localhosts']
    tags: connect
    
  # - debug: var=result_params
  #   when: inventory_hostname in groups['localhosts']
  - debug: msg='{{ result_params.query_results[0][0][0] }}'
    when: inventory_hostname in groups['localhosts']